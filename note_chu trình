Thuật toán kiểm tra chu trình có thể dùng để xét độ dài của chu trình được. Nhưng nếu dùng để kiểm tra trọng số của chu trình sẽ bị sai, nếu code đúng sẽ bị TLE. 

void DFS(int u){
	visited[u] = true;
	for(auto v : adj[u]){
		if(!visited[v.fi]){
			par[v.fi] = u;
			high[v.fi] = high[u] + 1;
			dist[v.fi] = dist[u] + v.se;
			DFS(v.fi);
		}
		else if(v.fi != par[u]){
			if(dist[u] - dist[v.fi] + v.se < d && high[u] - high[v.fi] + 1 >= 3){
				d = dist[u] - dist[v.fi] + v.se;
				max_len = high[u] - high[v.fi] + 1;
			}
		}
	}
	visited[u] = false;
}

Nếu k thêm dòng visited[u] = false; thuật toán này sẽ kiểm tra thiếu chu trình nhỏ con bên trong nó nhưng nếu chỉ kiểm tra coi có chu trình lẻ hay không thì k cần có visited[u] = false; 
vì nếu mình bỏ sót chu trình con bên trong nó, nhưng con nó lẻ, thì bố của nó (chứa chu trình con này) 100% lẻ (chỉ xét duy nhất 1 chu trình con lẻ thôi)

NÓI CHUNG KHI LIÊN QUAN TỚI BÀI TOÁN CHU TRÌNH THÊM DÒNG visited[u] = false; sẽ làm code đúng nhưng thuật toán sẽ rất chậm và nguy cơ bị TLE lên tới 99%
